{"ast":null,"code":"var _jsxFileName = \"/home/bigboy/Study/development/react+ionic/ionic-react/src/App.tsx\";\nimport React, { useRef, useState } from 'react';\nimport { IonApp, IonHeader, IonContent, IonToolbar, IonTitle, IonGrid, IonRow, IonCol, IonItem, IonLabel, IonInput, IonAlert } from '@ionic/react';\nimport BmiControls from './components/BmiControls';\nimport BmiResult from './components/BmiResult';\nimport InputControl from './components/InputControl';\n/* Core CSS required for Ionic components to work properly */\n\nimport '@ionic/react/css/core.css';\n/* Basic CSS for apps built with Ionic */\n\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n/* Optional CSS utils that can be commented out */\n\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n/* Theme variables */\n\nimport './theme/variables.css';\n\nconst App = () => {\n  const [calculatedBmi, setCalculatedBmi] = useState();\n  const [error, setError] = useState();\n  const [calcUnits, setCalcUnits] = useState('mkg');\n  const weightInputRef = useRef(null);\n  const heightInputRef = useRef(null);\n\n  const calculateBMI = () => {\n    const enteredWeight = weightInputRef.current.value;\n    const enteredHeight = heightInputRef.current.value;\n\n    if (!enteredHeight || !enteredWeight || +enteredHeight <= 0 || +enteredWeight <= 0) {\n      setError('Please enter a positive number!');\n      return;\n    }\n\n    const weightConversionFactor = calcUnits === 'ftlbs' ? 2.2 : 1;\n    const heightConversionFactor = calcUnits === 'ftlbs' ? 3.28 : 1;\n    const weight = +enteredWeight / weightConversionFactor;\n    const height = +enteredHeight / heightConversionFactor;\n    const bmi = weight / (height * height);\n    setCalculatedBmi(bmi);\n  };\n\n  const resetInputs = () => {\n    weightInputRef.current.value = '';\n    heightInputRef.current.value = '';\n  };\n\n  const clearError = () => {\n    setError('');\n  };\n\n  const selectCalcUnitHandler = selectedValue => {\n    setCalcUnits(selectedValue);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonAlert, {\n    isOpen: !!error,\n    message: error,\n    buttons: [{\n      text: 'Okay',\n      handler: clearError\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonApp, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"BMI Calculator\"))), /*#__PURE__*/React.createElement(IonContent, {\n    className: \"ion-padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonGrid, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputControl, {\n    selectedValue: calcUnits,\n    onSelectValue: selectCalcUnitHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Your Height (\", calcUnits === 'mkg' ? 'meters' : 'feet', \")\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"number\",\n    ref: heightInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(IonRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonCol, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IonItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    position: \"floating\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 19\n    }\n  }, \"Your Weight (\", calcUnits === 'mkg' ? 'kg' : 'lbs', \")\"), /*#__PURE__*/React.createElement(IonInput, {\n    type: \"number\",\n    ref: weightInputRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 19\n    }\n  })))), /*#__PURE__*/React.createElement(BmiControls, {\n    onCalculate: calculateBMI,\n    onReset: resetInputs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }), calculateBMI && /*#__PURE__*/React.createElement(BmiResult, {\n    result: calculatedBmi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })))));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/bigboy/Study/development/react+ionic/ionic-react/src/App.tsx"],"names":["React","useRef","useState","IonApp","IonHeader","IonContent","IonToolbar","IonTitle","IonGrid","IonRow","IonCol","IonItem","IonLabel","IonInput","IonAlert","BmiControls","BmiResult","InputControl","App","calculatedBmi","setCalculatedBmi","error","setError","calcUnits","setCalcUnits","weightInputRef","heightInputRef","calculateBMI","enteredWeight","current","value","enteredHeight","weightConversionFactor","heightConversionFactor","weight","height","bmi","resetInputs","clearError","selectCalcUnitHandler","selectedValue","text","handler"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\nimport { \n  IonApp, \n  IonHeader, \n  IonContent, \n  IonToolbar, \n  IonTitle, \n  IonGrid, \n  IonRow, \n  IonCol, \n  IonItem, \n  IonLabel, \n  IonInput, \n  IonAlert,\n} from '@ionic/react';\n\nimport BmiControls from './components/BmiControls';\nimport BmiResult from './components/BmiResult';\nimport InputControl from './components/InputControl';\n\n/* Core CSS required for Ionic components to work properly */\nimport '@ionic/react/css/core.css';\n\n/* Basic CSS for apps built with Ionic */\nimport '@ionic/react/css/normalize.css';\nimport '@ionic/react/css/structure.css';\nimport '@ionic/react/css/typography.css';\n\n/* Optional CSS utils that can be commented out */\nimport '@ionic/react/css/padding.css';\nimport '@ionic/react/css/float-elements.css';\nimport '@ionic/react/css/text-alignment.css';\nimport '@ionic/react/css/text-transformation.css';\nimport '@ionic/react/css/flex-utils.css';\nimport '@ionic/react/css/display.css';\n\n/* Theme variables */\nimport './theme/variables.css';\n\nconst App: React.FC = () => {\n  const [ calculatedBmi, setCalculatedBmi ] = useState<number>();\n  const [ error, setError ] = useState<string>();\n  const [ calcUnits, setCalcUnits ] = useState<'mkg' | 'ftlbs'>('mkg');\n\n  const weightInputRef = useRef<HTMLIonInputElement>(null);\n  const heightInputRef = useRef<HTMLIonInputElement>(null);\n\n  const calculateBMI = () => {\n    const enteredWeight = weightInputRef.current!.value;\n    const enteredHeight = heightInputRef.current!.value;\n\n    if ( !enteredHeight || !enteredWeight || +enteredHeight<=0 || +enteredWeight<=0){\n      setError('Please enter a positive number!');\n      return;\n    }\n\n    const weightConversionFactor = calcUnits === 'ftlbs' ? 2.2 : 1;\n    const heightConversionFactor = calcUnits === 'ftlbs' ? 3.28 : 1;\n\n    const weight = +enteredWeight / weightConversionFactor;\n    const height = +enteredHeight / heightConversionFactor;\n\n    const bmi = weight / ( height * height );\n\n    setCalculatedBmi(bmi);\n  };\n\n  const resetInputs = () => {\n    weightInputRef.current!.value = '';\n    heightInputRef.current!.value = '';\n  };\n\n  const clearError = () => {\n    setError('');\n  };\n\n  const selectCalcUnitHandler = (selectedValue: 'mkg' | 'ftlbs') => {\n    setCalcUnits(selectedValue);\n  };\n\n  return (\n    <React.Fragment>\n      <IonAlert isOpen={!!error} message={error} buttons={[{text: 'Okay', handler: clearError }]} />\n      <IonApp>\n        <IonHeader>\n          <IonToolbar color=\"primary\">\n            <IonTitle>BMI Calculator</IonTitle>\n          </IonToolbar>\n        </IonHeader>\n        <IonContent className=\"ion-padding\">\n          <IonGrid>\n            <IonRow>\n              <IonCol>\n                <InputControl selectedValue={calcUnits} onSelectValue={selectCalcUnitHandler} />\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Your Height ({calcUnits === 'mkg' ? 'meters' : 'feet'})</IonLabel>\n                  <IonInput type=\"number\" ref={heightInputRef}></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <IonRow>\n              <IonCol>\n                <IonItem>\n                  <IonLabel position=\"floating\">Your Weight ({calcUnits === 'mkg' ? 'kg' : 'lbs'})</IonLabel>\n                  <IonInput type=\"number\" ref={weightInputRef}></IonInput>\n                </IonItem>\n              </IonCol>\n            </IonRow>\n            <BmiControls onCalculate={calculateBMI} onReset={resetInputs} />\n            { calculateBMI && (\n              <BmiResult result={ calculatedBmi } />\n            )}\n          </IonGrid>\n        </IonContent>\n      </IonApp>\n    </React.Fragment>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}